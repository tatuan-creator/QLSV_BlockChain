#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLSV_BlockChain.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLSV_BlockChain")]
	public partial class BlockChain_QLSVDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertKhoaVien(KhoaVien instance);
    partial void UpdateKhoaVien(KhoaVien instance);
    partial void DeleteKhoaVien(KhoaVien instance);
    partial void InsertStatusSinhVien(StatusSinhVien instance);
    partial void UpdateStatusSinhVien(StatusSinhVien instance);
    partial void DeleteStatusSinhVien(StatusSinhVien instance);
    partial void InsertVaiTro(VaiTro instance);
    partial void UpdateVaiTro(VaiTro instance);
    partial void DeleteVaiTro(VaiTro instance);
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    partial void InsertBangDiem(BangDiem instance);
    partial void UpdateBangDiem(BangDiem instance);
    partial void DeleteBangDiem(BangDiem instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertHocKy(HocKy instance);
    partial void UpdateHocKy(HocKy instance);
    partial void DeleteHocKy(HocKy instance);
    #endregion
		
		public BlockChain_QLSVDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLSV_BlockChainConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BlockChain_QLSVDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlockChain_QLSVDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlockChain_QLSVDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlockChain_QLSVDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<KhoaVien> KhoaViens
		{
			get
			{
				return this.GetTable<KhoaVien>();
			}
		}
		
		public System.Data.Linq.Table<StatusSinhVien> StatusSinhViens
		{
			get
			{
				return this.GetTable<StatusSinhVien>();
			}
		}
		
		public System.Data.Linq.Table<VaiTro> VaiTros
		{
			get
			{
				return this.GetTable<VaiTro>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
		
		public System.Data.Linq.Table<BangDiem> BangDiems
		{
			get
			{
				return this.GetTable<BangDiem>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<HocKy> HocKies
		{
			get
			{
				return this.GetTable<HocKy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMonHoc;
		
		private string _TenMonHoc;
		
		private EntitySet<BangDiem> _BangDiems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnTenMonHocChanging(string value);
    partial void OnTenMonHocChanged();
    #endregion
		
		public MonHoc()
		{
			this._BangDiems = new EntitySet<BangDiem>(new Action<BangDiem>(this.attach_BangDiems), new Action<BangDiem>(this.detach_BangDiems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMonHoc", DbType="NVarChar(100)")]
		public string TenMonHoc
		{
			get
			{
				return this._TenMonHoc;
			}
			set
			{
				if ((this._TenMonHoc != value))
				{
					this.OnTenMonHocChanging(value);
					this.SendPropertyChanging();
					this._TenMonHoc = value;
					this.SendPropertyChanged("TenMonHoc");
					this.OnTenMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_BangDiem", Storage="_BangDiems", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<BangDiem> BangDiems
		{
			get
			{
				return this._BangDiems;
			}
			set
			{
				this._BangDiems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangDiems(BangDiem entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_BangDiems(BangDiem entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoaVien")]
	public partial class KhoaVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKhoa;
		
		private string _TenKhoa;
		
		private EntitySet<SinhVien> _SinhViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKhoaChanging(int value);
    partial void OnIDKhoaChanged();
    partial void OnTenKhoaChanging(string value);
    partial void OnTenKhoaChanged();
    #endregion
		
		public KhoaVien()
		{
			this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhoa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDKhoa
		{
			get
			{
				return this._IDKhoa;
			}
			set
			{
				if ((this._IDKhoa != value))
				{
					this.OnIDKhoaChanging(value);
					this.SendPropertyChanging();
					this._IDKhoa = value;
					this.SendPropertyChanged("IDKhoa");
					this.OnIDKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(100)")]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					this.OnTenKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenKhoa = value;
					this.SendPropertyChanged("TenKhoa");
					this.OnTenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaVien_SinhVien", Storage="_SinhViens", ThisKey="IDKhoa", OtherKey="KhoaVien")]
		public EntitySet<SinhVien> SinhViens
		{
			get
			{
				return this._SinhViens;
			}
			set
			{
				this._SinhViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.KhoaVien1 = this;
		}
		
		private void detach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.KhoaVien1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatusSinhVien")]
	public partial class StatusSinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTrangThai;
		
		private string _TenTrangThai;
		
		private System.Nullable<int> _AllowEdit;
		
		private EntitySet<SinhVien> _SinhViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTrangThaiChanging(int value);
    partial void OnIDTrangThaiChanged();
    partial void OnTenTrangThaiChanging(string value);
    partial void OnTenTrangThaiChanged();
    partial void OnAllowEditChanging(System.Nullable<int> value);
    partial void OnAllowEditChanged();
    #endregion
		
		public StatusSinhVien()
		{
			this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTrangThai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTrangThai
		{
			get
			{
				return this._IDTrangThai;
			}
			set
			{
				if ((this._IDTrangThai != value))
				{
					this.OnIDTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._IDTrangThai = value;
					this.SendPropertyChanged("IDTrangThai");
					this.OnIDTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTrangThai", DbType="NVarChar(100)")]
		public string TenTrangThai
		{
			get
			{
				return this._TenTrangThai;
			}
			set
			{
				if ((this._TenTrangThai != value))
				{
					this.OnTenTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TenTrangThai = value;
					this.SendPropertyChanged("TenTrangThai");
					this.OnTenTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowEdit", DbType="Int")]
		public System.Nullable<int> AllowEdit
		{
			get
			{
				return this._AllowEdit;
			}
			set
			{
				if ((this._AllowEdit != value))
				{
					this.OnAllowEditChanging(value);
					this.SendPropertyChanging();
					this._AllowEdit = value;
					this.SendPropertyChanged("AllowEdit");
					this.OnAllowEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSinhVien_SinhVien", Storage="_SinhViens", ThisKey="IDTrangThai", OtherKey="TrangThai")]
		public EntitySet<SinhVien> SinhViens
		{
			get
			{
				return this._SinhViens;
			}
			set
			{
				this._SinhViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.StatusSinhVien = this;
		}
		
		private void detach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.StatusSinhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VaiTro")]
	public partial class VaiTro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaVaiTro;
		
		private string _TenVaiTro;
		
		private string _Thongtinkhoa;
		
		private EntitySet<NguoiDung> _NguoiDungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVaiTroChanging(int value);
    partial void OnMaVaiTroChanged();
    partial void OnTenVaiTroChanging(string value);
    partial void OnTenVaiTroChanged();
    partial void OnThongtinkhoaChanging(string value);
    partial void OnThongtinkhoaChanged();
    #endregion
		
		public VaiTro()
		{
			this._NguoiDungs = new EntitySet<NguoiDung>(new Action<NguoiDung>(this.attach_NguoiDungs), new Action<NguoiDung>(this.detach_NguoiDungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVaiTro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaVaiTro
		{
			get
			{
				return this._MaVaiTro;
			}
			set
			{
				if ((this._MaVaiTro != value))
				{
					this.OnMaVaiTroChanging(value);
					this.SendPropertyChanging();
					this._MaVaiTro = value;
					this.SendPropertyChanged("MaVaiTro");
					this.OnMaVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenVaiTro", DbType="NVarChar(50)")]
		public string TenVaiTro
		{
			get
			{
				return this._TenVaiTro;
			}
			set
			{
				if ((this._TenVaiTro != value))
				{
					this.OnTenVaiTroChanging(value);
					this.SendPropertyChanging();
					this._TenVaiTro = value;
					this.SendPropertyChanged("TenVaiTro");
					this.OnTenVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thongtinkhoa", DbType="NVarChar(50)")]
		public string Thongtinkhoa
		{
			get
			{
				return this._Thongtinkhoa;
			}
			set
			{
				if ((this._Thongtinkhoa != value))
				{
					this.OnThongtinkhoaChanging(value);
					this.SendPropertyChanging();
					this._Thongtinkhoa = value;
					this.SendPropertyChanged("Thongtinkhoa");
					this.OnThongtinkhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_NguoiDung", Storage="_NguoiDungs", ThisKey="MaVaiTro", OtherKey="MaVaiTro")]
		public EntitySet<NguoiDung> NguoiDungs
		{
			get
			{
				return this._NguoiDungs;
			}
			set
			{
				this._NguoiDungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = this;
		}
		
		private void detach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSinhVien;
		
		private string _TenSinhVien;
		
		private string _Lop;
		
		private System.Nullable<int> _KhoaVien;
		
		private string _NgaySinh;
		
		private System.Nullable<int> _TrangThai;
		
		private string _taikhoan;
		
		private string _matkhau;
		
		private EntitySet<BangDiem> _BangDiems;
		
		private EntityRef<KhoaVien> _KhoaVien1;
		
		private EntityRef<StatusSinhVien> _StatusSinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSinhVienChanging(int value);
    partial void OnIDSinhVienChanged();
    partial void OnTenSinhVienChanging(string value);
    partial void OnTenSinhVienChanged();
    partial void OnLopChanging(string value);
    partial void OnLopChanged();
    partial void OnKhoaVienChanging(System.Nullable<int> value);
    partial void OnKhoaVienChanged();
    partial void OnNgaySinhChanging(string value);
    partial void OnNgaySinhChanged();
    partial void OnTrangThaiChanging(System.Nullable<int> value);
    partial void OnTrangThaiChanged();
    partial void OntaikhoanChanging(string value);
    partial void OntaikhoanChanged();
    partial void OnmatkhauChanging(string value);
    partial void OnmatkhauChanged();
    #endregion
		
		public SinhVien()
		{
			this._BangDiems = new EntitySet<BangDiem>(new Action<BangDiem>(this.attach_BangDiems), new Action<BangDiem>(this.detach_BangDiems));
			this._KhoaVien1 = default(EntityRef<KhoaVien>);
			this._StatusSinhVien = default(EntityRef<StatusSinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSinhVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDSinhVien
		{
			get
			{
				return this._IDSinhVien;
			}
			set
			{
				if ((this._IDSinhVien != value))
				{
					this.OnIDSinhVienChanging(value);
					this.SendPropertyChanging();
					this._IDSinhVien = value;
					this.SendPropertyChanged("IDSinhVien");
					this.OnIDSinhVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSinhVien", DbType="NVarChar(100)")]
		public string TenSinhVien
		{
			get
			{
				return this._TenSinhVien;
			}
			set
			{
				if ((this._TenSinhVien != value))
				{
					this.OnTenSinhVienChanging(value);
					this.SendPropertyChanging();
					this._TenSinhVien = value;
					this.SendPropertyChanged("TenSinhVien");
					this.OnTenSinhVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="NVarChar(100)")]
		public string Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhoaVien", DbType="Int")]
		public System.Nullable<int> KhoaVien
		{
			get
			{
				return this._KhoaVien;
			}
			set
			{
				if ((this._KhoaVien != value))
				{
					if (this._KhoaVien1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoaVienChanging(value);
					this.SendPropertyChanging();
					this._KhoaVien = value;
					this.SendPropertyChanged("KhoaVien");
					this.OnKhoaVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Char(20)")]
		public string NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					if (this._StatusSinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taikhoan", DbType="VarChar(100)")]
		public string taikhoan
		{
			get
			{
				return this._taikhoan;
			}
			set
			{
				if ((this._taikhoan != value))
				{
					this.OntaikhoanChanging(value);
					this.SendPropertyChanging();
					this._taikhoan = value;
					this.SendPropertyChanged("taikhoan");
					this.OntaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matkhau", DbType="VarChar(100)")]
		public string matkhau
		{
			get
			{
				return this._matkhau;
			}
			set
			{
				if ((this._matkhau != value))
				{
					this.OnmatkhauChanging(value);
					this.SendPropertyChanging();
					this._matkhau = value;
					this.SendPropertyChanged("matkhau");
					this.OnmatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_BangDiem", Storage="_BangDiems", ThisKey="IDSinhVien", OtherKey="MaSinhVien")]
		public EntitySet<BangDiem> BangDiems
		{
			get
			{
				return this._BangDiems;
			}
			set
			{
				this._BangDiems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaVien_SinhVien", Storage="_KhoaVien1", ThisKey="KhoaVien", OtherKey="IDKhoa", IsForeignKey=true)]
		public KhoaVien KhoaVien1
		{
			get
			{
				return this._KhoaVien1.Entity;
			}
			set
			{
				KhoaVien previousValue = this._KhoaVien1.Entity;
				if (((previousValue != value) 
							|| (this._KhoaVien1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoaVien1.Entity = null;
						previousValue.SinhViens.Remove(this);
					}
					this._KhoaVien1.Entity = value;
					if ((value != null))
					{
						value.SinhViens.Add(this);
						this._KhoaVien = value.IDKhoa;
					}
					else
					{
						this._KhoaVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhoaVien1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusSinhVien_SinhVien", Storage="_StatusSinhVien", ThisKey="TrangThai", OtherKey="IDTrangThai", IsForeignKey=true)]
		public StatusSinhVien StatusSinhVien
		{
			get
			{
				return this._StatusSinhVien.Entity;
			}
			set
			{
				StatusSinhVien previousValue = this._StatusSinhVien.Entity;
				if (((previousValue != value) 
							|| (this._StatusSinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusSinhVien.Entity = null;
						previousValue.SinhViens.Remove(this);
					}
					this._StatusSinhVien.Entity = value;
					if ((value != null))
					{
						value.SinhViens.Add(this);
						this._TrangThai = value.IDTrangThai;
					}
					else
					{
						this._TrangThai = default(Nullable<int>);
					}
					this.SendPropertyChanged("StatusSinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangDiems(BangDiem entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_BangDiems(BangDiem entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangDiem")]
	public partial class BangDiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBangDiem;
		
		private System.Nullable<int> _MaSinhVien;
		
		private System.Nullable<int> _MaNguoiDung;
		
		private string _MaHocKy;
		
		private string _MaMonHoc;
		
		private string _NgayKy;
		
		private string _ChuKy;
		
		private string _TepTinChungThuc;
		
		private System.Nullable<int> _TrangThai;
		
		private System.Nullable<int> _TrangThaiXacThuc;
		
		private string _previousHash;
		
		private string _TimeStamp;
		
		private EntityRef<MonHoc> _MonHoc;
		
		private EntityRef<SinhVien> _SinhVien;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<HocKy> _HocKy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBangDiemChanging(int value);
    partial void OnMaBangDiemChanged();
    partial void OnMaSinhVienChanging(System.Nullable<int> value);
    partial void OnMaSinhVienChanged();
    partial void OnMaNguoiDungChanging(System.Nullable<int> value);
    partial void OnMaNguoiDungChanged();
    partial void OnMaHocKyChanging(string value);
    partial void OnMaHocKyChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnNgayKyChanging(string value);
    partial void OnNgayKyChanged();
    partial void OnChuKyChanging(string value);
    partial void OnChuKyChanged();
    partial void OnTepTinChungThucChanging(string value);
    partial void OnTepTinChungThucChanged();
    partial void OnTrangThaiChanging(System.Nullable<int> value);
    partial void OnTrangThaiChanged();
    partial void OnTrangThaiXacThucChanging(System.Nullable<int> value);
    partial void OnTrangThaiXacThucChanged();
    partial void OnpreviousHashChanging(string value);
    partial void OnpreviousHashChanged();
    partial void OnTimeStampChanging(string value);
    partial void OnTimeStampChanged();
    #endregion
		
		public BangDiem()
		{
			this._MonHoc = default(EntityRef<MonHoc>);
			this._SinhVien = default(EntityRef<SinhVien>);
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._HocKy = default(EntityRef<HocKy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBangDiem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBangDiem
		{
			get
			{
				return this._MaBangDiem;
			}
			set
			{
				if ((this._MaBangDiem != value))
				{
					this.OnMaBangDiemChanging(value);
					this.SendPropertyChanging();
					this._MaBangDiem = value;
					this.SendPropertyChanged("MaBangDiem");
					this.OnMaBangDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSinhVien", DbType="Int")]
		public System.Nullable<int> MaSinhVien
		{
			get
			{
				return this._MaSinhVien;
			}
			set
			{
				if ((this._MaSinhVien != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSinhVienChanging(value);
					this.SendPropertyChanging();
					this._MaSinhVien = value;
					this.SendPropertyChanged("MaSinhVien");
					this.OnMaSinhVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNguoiDung", DbType="Int")]
		public System.Nullable<int> MaNguoiDung
		{
			get
			{
				return this._MaNguoiDung;
			}
			set
			{
				if ((this._MaNguoiDung != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNguoiDung = value;
					this.SendPropertyChanged("MaNguoiDung");
					this.OnMaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="VarChar(50)")]
		public string MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					if (this._HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="VarChar(50)")]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKy", DbType="VarChar(50)")]
		public string NgayKy
		{
			get
			{
				return this._NgayKy;
			}
			set
			{
				if ((this._NgayKy != value))
				{
					this.OnNgayKyChanging(value);
					this.SendPropertyChanging();
					this._NgayKy = value;
					this.SendPropertyChanged("NgayKy");
					this.OnNgayKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChuKy", DbType="VarChar(500)")]
		public string ChuKy
		{
			get
			{
				return this._ChuKy;
			}
			set
			{
				if ((this._ChuKy != value))
				{
					this.OnChuKyChanging(value);
					this.SendPropertyChanging();
					this._ChuKy = value;
					this.SendPropertyChanged("ChuKy");
					this.OnChuKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TepTinChungThuc", DbType="VarChar(500)")]
		public string TepTinChungThuc
		{
			get
			{
				return this._TepTinChungThuc;
			}
			set
			{
				if ((this._TepTinChungThuc != value))
				{
					this.OnTepTinChungThucChanging(value);
					this.SendPropertyChanging();
					this._TepTinChungThuc = value;
					this.SendPropertyChanged("TepTinChungThuc");
					this.OnTepTinChungThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiXacThuc", DbType="Int")]
		public System.Nullable<int> TrangThaiXacThuc
		{
			get
			{
				return this._TrangThaiXacThuc;
			}
			set
			{
				if ((this._TrangThaiXacThuc != value))
				{
					this.OnTrangThaiXacThucChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiXacThuc = value;
					this.SendPropertyChanged("TrangThaiXacThuc");
					this.OnTrangThaiXacThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_previousHash", DbType="VarChar(500)")]
		public string previousHash
		{
			get
			{
				return this._previousHash;
			}
			set
			{
				if ((this._previousHash != value))
				{
					this.OnpreviousHashChanging(value);
					this.SendPropertyChanging();
					this._previousHash = value;
					this.SendPropertyChanged("previousHash");
					this.OnpreviousHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="NChar(10)")]
		public string TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_BangDiem", Storage="_MonHoc", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.BangDiems.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.BangDiems.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_BangDiem", Storage="_SinhVien", ThisKey="MaSinhVien", OtherKey="IDSinhVien", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.BangDiems.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.BangDiems.Add(this);
						this._MaSinhVien = value.IDSinhVien;
					}
					else
					{
						this._MaSinhVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BangDiem", Storage="_NguoiDung", ThisKey="MaNguoiDung", OtherKey="MaNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.BangDiems.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.BangDiems.Add(this);
						this._MaNguoiDung = value.MaNguoiDung;
					}
					else
					{
						this._MaNguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_BangDiem", Storage="_HocKy", ThisKey="MaHocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public HocKy HocKy
		{
			get
			{
				return this._HocKy.Entity;
			}
			set
			{
				HocKy previousValue = this._HocKy.Entity;
				if (((previousValue != value) 
							|| (this._HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKy.Entity = null;
						previousValue.BangDiems.Remove(this);
					}
					this._HocKy.Entity = value;
					if ((value != null))
					{
						value.BangDiems.Add(this);
						this._MaHocKy = value.MaHocKy;
					}
					else
					{
						this._MaHocKy = default(string);
					}
					this.SendPropertyChanged("HocKy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNguoiDung;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private string _Mota;
		
		private System.Nullable<int> _MaVaiTro;
		
		private string _SoE;
		
		private string _SoN;
		
		private System.Nullable<int> _IsActive;
		
		private EntitySet<BangDiem> _BangDiems;
		
		private EntityRef<VaiTro> _VaiTro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNguoiDungChanging(int value);
    partial void OnMaNguoiDungChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnMaVaiTroChanging(System.Nullable<int> value);
    partial void OnMaVaiTroChanged();
    partial void OnSoEChanging(string value);
    partial void OnSoEChanged();
    partial void OnSoNChanging(string value);
    partial void OnSoNChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public NguoiDung()
		{
			this._BangDiems = new EntitySet<BangDiem>(new Action<BangDiem>(this.attach_BangDiems), new Action<BangDiem>(this.detach_BangDiems));
			this._VaiTro = default(EntityRef<VaiTro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNguoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNguoiDung
		{
			get
			{
				return this._MaNguoiDung;
			}
			set
			{
				if ((this._MaNguoiDung != value))
				{
					this.OnMaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNguoiDung = value;
					this.SendPropertyChanged("MaNguoiDung");
					this.OnMaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="NChar(50)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(50)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVaiTro", DbType="Int")]
		public System.Nullable<int> MaVaiTro
		{
			get
			{
				return this._MaVaiTro;
			}
			set
			{
				if ((this._MaVaiTro != value))
				{
					if (this._VaiTro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaVaiTroChanging(value);
					this.SendPropertyChanging();
					this._MaVaiTro = value;
					this.SendPropertyChanged("MaVaiTro");
					this.OnMaVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoE", DbType="Char(500)")]
		public string SoE
		{
			get
			{
				return this._SoE;
			}
			set
			{
				if ((this._SoE != value))
				{
					this.OnSoEChanging(value);
					this.SendPropertyChanging();
					this._SoE = value;
					this.SendPropertyChanged("SoE");
					this.OnSoEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoN", DbType="Char(500)")]
		public string SoN
		{
			get
			{
				return this._SoN;
			}
			set
			{
				if ((this._SoN != value))
				{
					this.OnSoNChanging(value);
					this.SendPropertyChanging();
					this._SoN = value;
					this.SendPropertyChanged("SoN");
					this.OnSoNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BangDiem", Storage="_BangDiems", ThisKey="MaNguoiDung", OtherKey="MaNguoiDung")]
		public EntitySet<BangDiem> BangDiems
		{
			get
			{
				return this._BangDiems;
			}
			set
			{
				this._BangDiems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_NguoiDung", Storage="_VaiTro", ThisKey="MaVaiTro", OtherKey="MaVaiTro", IsForeignKey=true)]
		public VaiTro VaiTro
		{
			get
			{
				return this._VaiTro.Entity;
			}
			set
			{
				VaiTro previousValue = this._VaiTro.Entity;
				if (((previousValue != value) 
							|| (this._VaiTro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VaiTro.Entity = null;
						previousValue.NguoiDungs.Remove(this);
					}
					this._VaiTro.Entity = value;
					if ((value != null))
					{
						value.NguoiDungs.Add(this);
						this._MaVaiTro = value.MaVaiTro;
					}
					else
					{
						this._MaVaiTro = default(Nullable<int>);
					}
					this.SendPropertyChanged("VaiTro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangDiems(BangDiem entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_BangDiems(BangDiem entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocKy")]
	public partial class HocKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocKy;
		
		private string _TenHocKy;
		
		private string _GhiChu;
		
		private System.Nullable<int> _IsActive;
		
		private EntitySet<BangDiem> _BangDiems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocKyChanging(string value);
    partial void OnMaHocKyChanged();
    partial void OnTenHocKyChanging(string value);
    partial void OnTenHocKyChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public HocKy()
		{
			this._BangDiems = new EntitySet<BangDiem>(new Action<BangDiem>(this.attach_BangDiems), new Action<BangDiem>(this.detach_BangDiems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHocKy", DbType="NVarChar(100)")]
		public string TenHocKy
		{
			get
			{
				return this._TenHocKy;
			}
			set
			{
				if ((this._TenHocKy != value))
				{
					this.OnTenHocKyChanging(value);
					this.SendPropertyChanging();
					this._TenHocKy = value;
					this.SendPropertyChanged("TenHocKy");
					this.OnTenHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(500)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_BangDiem", Storage="_BangDiems", ThisKey="MaHocKy", OtherKey="MaHocKy")]
		public EntitySet<BangDiem> BangDiems
		{
			get
			{
				return this._BangDiems;
			}
			set
			{
				this._BangDiems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangDiems(BangDiem entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = this;
		}
		
		private void detach_BangDiems(BangDiem entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = null;
		}
	}
}
#pragma warning restore 1591
